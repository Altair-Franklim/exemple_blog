* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;

  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

:root {
  font-size: 62.5%;
  font-family: 'Mulish', sans-serif;

  --color-base-gray-100: #F4FCFF;
  --brand-colors-explorer-dark: #065E7C;
  --platform-aliases-shape-principal: #202024;
}

html, body, input {
  font-family: 'Mulish', sans-serif;
}

body {
  font-size: 1.6rem;
}

.app {
  width: min(43.4rem, 100vw);
  height: 100vh;

  margin: 0 auto;

  display: grid;
  grid-template-areas:
  "A"
  "B"
  "C"
  "D";
  grid-template-rows: max-content 1fr 1fr max-content;
}

.container {
  padding: 1.2rem 2.8rem;
}

.app header {
  grid-area: A;
  display: flex;
  align-items: center;

  gap: 3rem;

  background-color: var(--brand-colors-explorer-dark);

  --startY: -100%;
  animation: move .2s;
}

.app header img:first-child,
.avatar {
  width: 4.5rem;
  height: 4.5rem;
  border-radius: 50%;

  object-fit: cover;
}

.app header img:first-child {
  padding: 0.8rem;
  background-color: var(--color-base-gray-100);
}

header form {
  width: 100%;
}

.input-wrapper {
  overflow: hidden;
}

.input-wrapper input {
  width: 100%;
  padding: 12px 16px 12px 14px;
  align-items: center;

  border: none;
  border-radius: 4px;

  color: #FFFFFF;
  background: rgba(255, 255, 255, 0.20);
}

.input-wrapper input::placeholder {
  font-size: 1.6rem;
  font-style: normal;
  font-weight: 400;

  color: #FFFFFF;
}

.input-wrapper label {
  width: 1px;
  height: 1px;

  opacity: 0;
  position: absolute;
}

.app main {
  grid-area: B;

  --delay: .1s;
  animation: appear .2s var(--delay) backwards;
}

.app aside {
  grid-area: C;
}

h1,
h2 {
  font-size: 24px;
  font-style: normal;
  font-weight: 700;

  color: var(--platform-aliases-shape-principal);
}

h3 {
  font-size: 1.8rem;
  font-style: normal;
  font-weight: 700;

  color: var(--platform-aliases-shape-principal);
}

h1 {
  margin-bottom: 0.8rem;
}

button {
  border: none;
  padding: 1.2rem;

  border-radius: 50%;

  background: var(--brand-colors-explorer-dark);

  cursor: pointer;
}

button:hover {
  transform: scale(1.1);
  cursor: pointer;
}

.button-wrapper {
  display: flex;
  gap: 1.2rem;
}

main p {
  margin-top: 3.2rem;

  font-size: 1.6rem;
  font-style: normal;
  font-weight: 400;
  line-height: 2.56rem;
}

aside p {
  font-size: 1.4rem;

  margin-top: 1.5rem;
}

.galery {
  display: grid;
  gap: 3.2rem;
  margin: 3.2rem 0 1rem;
}

.item {
  display: flex;
  gap: 1.6rem;

  align-items: center;

  transition-duration: 200ms;
  transition-timing-function: ease-out;

  --delay: .1s;
  animation: appear .4s var(--delay) backwards;
}

.item figure img {
  height: max(8.4rem, 100%);
  transition-duration: 200ms;
  transition-timing-function: ease-out;
}

.app footer {
  grid-area: D;

  background-color: var(--brand-colors-explorer-dark);

  --startY: 100%;
  animation: move .2s;
}

footer p {
  text-align: center;
  color: white;

  font-size: 16px;
  font-style: normal;
  font-weight: 400;
}

@media screen and (min-width: 1120px) {
  .app {
  width: 100vw;

  margin: 0 auto;

  grid-template-areas:
  "A A"
  "B C"
  "D D ";

  grid-template-rows: max-content 1fr max-content;
  grid-template-columns: 2fr 1fr;
  overflow-x: hidden;
  }

  .app header {
    grid-area: A;
  }
  .app main {
    grid-area: B;
  }

  main > img {
    border-radius: 0.5rem;

    width: 100%;
    padding: 4.4rem 2.8rem 0 2.8rem;
  }

  .tittle-wrapper {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .app aside {
    grid-area: C;
  }

  figure img {
    width: 15.1rem;
    height: 8.4rem;
  }

  .app footer {
    grid-area: D;
    text-align: center;
  }

  h2 {
    padding-top: 3.2rem;
  }
}

.item:hover {
  transform: scale(1.1);
  cursor: pointer;
}

@keyframes move {
  from {
    transform: translateY(var(--startY));
  }
}

@keyframes appear {
  0% {
    opacity: 0;
    transform: scale(0.7);
    }
  
  50% {
    transform: scale(1.2);
  }
  }
